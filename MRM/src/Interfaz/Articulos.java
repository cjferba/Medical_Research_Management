/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import JdbcCustomDatum.*;
import ClasesAuxiliares.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author Carlos Basso
 */
public class Articulos extends javax.swing.JFrame {

    /**
     * Creates new form Articulos
     */
    protected BaseDeDatos BD;

    public Articulos(BaseDeDatos BaseDatos) {
        BD = BaseDatos;

        initComponents();
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public Articulos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        TipoArticulo = new javax.swing.JComboBox();
        BusquedaArticulos = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        nombreArticulo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tituloRevista = new javax.swing.JTextField();
        anio1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Buscar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        anio2 = new javax.swing.JTextField();
        VirusBuscar = new javax.swing.JTextField();
        referenciaBuscar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AutoresArticulo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        institutoArticulo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        VirusArticulo = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        volumen = new javax.swing.JTextField();
        anioart = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        numart = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        RefArt = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ArtRef = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Articulos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(326, 326, 326)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(329, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        TipoArticulo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Interno" }));

        BusquedaArticulos.setMaximumRowCount(200);

        jLabel6.setText("Titulo articulo");

        nombreArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreArticuloKeyReleased(evt);
            }
        });

        jLabel7.setText("Titulo revista");

        tituloRevista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tituloRevistaKeyReleased(evt);
            }
        });

        anio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anio1KeyReleased(evt);
            }
        });

        jLabel8.setText("AÃ±o de");

        Buscar.setText("Mostrar Informacion");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jLabel10.setText("a");

        anio2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anio2KeyReleased(evt);
            }
        });

        VirusBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VirusBuscarKeyReleased(evt);
            }
        });

        referenciaBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                referenciaBuscarKeyReleased(evt);
            }
        });

        jLabel11.setText("virus");

        jLabel12.setText("referencia");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nombreArticulo)
                    .addComponent(tituloRevista, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(BusquedaArticulos, 0, 210, Short.MAX_VALUE)
                        .addGap(74, 74, 74)
                        .addComponent(Buscar)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(anio1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(anio2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(referenciaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VirusBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TipoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TipoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(nombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(VirusBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(tituloRevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(anio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(referenciaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BusquedaArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar))
                .addContainerGap())
        );

        AutoresArticulo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Nacionalidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AutoresArticulo);

        jLabel2.setText("Autores");

        jLabel3.setText("Instituto: ");

        institutoArticulo.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(institutoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(institutoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Virus");

        VirusArticulo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(VirusArticulo);

        jLabel13.setText("anio");

        jLabel14.setText("volumen");

        jLabel15.setText("num");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(anioart, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(volumen))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numart, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(volumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(numart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(anioart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        RefArt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Titulo", "Revista"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(RefArt);

        jLabel9.setText("Articulos donde se le referencia");

        ArtRef.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Titulo", "AÃ±o"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ArtRef);

        jLabel4.setText("Articulos Referenciados");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(99, 99, 99)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        try {
            SeleccionaUnArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void nombreArticuloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreArticuloKeyReleased
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:
    }//GEN-LAST:event_nombreArticuloKeyReleased

    private void anio1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anio1KeyReleased
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_anio1KeyReleased

    private void tituloRevistaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tituloRevistaKeyReleased
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tituloRevistaKeyReleased

    private void anio2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anio2KeyReleased
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_anio2KeyReleased

    private void VirusBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VirusBuscarKeyReleased
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_VirusBuscarKeyReleased

    private void referenciaBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_referenciaBuscarKeyReleased
        try {
            this.ConsultarArticulo();
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_referenciaBuscarKeyReleased

    /**
     * @param args the command line arguments
     */
    /*
     * Prar articulos internos
     * SELECT TREAT(VALUE(art_int) AS Articulo_Interno).contrato contrato_ref 
     FROM Articulo_Tab art_int 
     where value(art_int) is of(only Articulo_Interno) 
     AND art_int.articulo=2;
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Articulos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ArtRef;
    private javax.swing.JTable AutoresArticulo;
    private javax.swing.JButton Buscar;
    private javax.swing.JComboBox BusquedaArticulos;
    private javax.swing.JTable RefArt;
    private javax.swing.JComboBox TipoArticulo;
    private javax.swing.JTable VirusArticulo;
    private javax.swing.JTextField VirusBuscar;
    private javax.swing.JTextField anio1;
    private javax.swing.JTextField anio2;
    private javax.swing.JTextField anioart;
    private javax.swing.JTextField institutoArticulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nombreArticulo;
    private javax.swing.JTextField numart;
    private javax.swing.JTextField referenciaBuscar;
    private javax.swing.JTextField tituloRevista;
    private javax.swing.JTextField volumen;
    // End of variables declaration//GEN-END:variables

    public void ConsultarArticulo() throws SQLException {
        ArrayList<Articulo> articulos = new ArrayList();
        ArrayList<ArrayList<Autor>> autores = new ArrayList();
        ArrayList<ArrayList<Virus>> virus = new ArrayList();
        ArrayList<ArrayList<Articulo>> art_ref = new ArrayList();
        ArrayList<ArrayList<Articulo>> ref_en_art = new ArrayList();
        ArrayList<ArticuloCombobox> artCombo = new ArrayList();

        String query = "select value(art),"
                + "cursor ("
                + "select value(a) from autor_tab a ,TABLE( art.lista_autores )au where a.id_autor= au.COLUMN_VALUE"
                + "),"
                + "cursor ("
                + "select value(v) from virus_tab v ,TABLE( art.lista_virus )virus where v.id_virus= virus.COLUMN_VALUE"
                + "),"
                + "cursor ("
                + "select value(auxart) from articulo_tab auxart ,TABLE( art.referencia) articulo where auxart.articulo= articulo.COLUMN_VALUE"
                + "),"
                + "cursor ("
                + "select value(auxartre) from articulo_tab auxartre ,TABLE( art.es_referenciado) articulore where auxartre.articulo= articulore.COLUMN_VALUE"
                + ")"
                + "from articulo_tab art"; //--WHERE TREAT (VALUE(art) AS articulo_interno)"

        boolean bandera = true;
        if (!"".equals(VirusBuscar.getText()) && isInteger(referenciaBuscar.getText())) {
            query += " ,table(art.referencia) art_ref, virus_tab vir, "
                    + " table(art.lista_virus) art_vir where  art_vir.column_value=vir.id_virus and";
            bandera = false;
            if (!"".equals(VirusBuscar.getText())) {
                query += " vir.descripcion LIKE '%" + VirusBuscar.getText() + "%' and";
            }
            if (isInteger(referenciaBuscar.getText())) {
                query += " art_ref.column_value=" + Integer.parseInt(referenciaBuscar.getText()) + " and";
            }
            query = query.substring(0, query.length() - 3);
        }

        if (!"".equals(nombreArticulo.getText()) || !"".equals(tituloRevista.getText())
                || !"".equals(anio1.getText()) || !"".equals(anio2.getText()) || TipoArticulo.getSelectedItem() != "Todos") {
            if (bandera == false) {
                query += " AND ";
            } else {
                query += " WHERE ";
            }
            if (!"".equals(nombreArticulo.getText())) {
                System.out.print("nombre");
                query += " art.titulo LIKE '%" + nombreArticulo.getText() + "%' AND";
            }
            if (!"".equals(tituloRevista.getText())) {
                query += " art.revista LIKE '%" + tituloRevista.getText() + "%' AND";
                System.out.print("revista");
            }
            if (isInteger(anio1.getText()) && isInteger(anio2.getText())) {

                if (Integer.parseInt(anio1.getText()) > 0 && Integer.parseInt(anio2.getText()) > 0) {
                    query += " art.anio > " + Integer.parseInt(anio1.getText()) + " AND "
                            + " art.anio < " + Integer.parseInt(anio2.getText()) + " AND";
                }
            } else {
                if (isInteger(anio1.getText())) {
                    if (Integer.parseInt(anio1.getText()) > 0) {
                        query += " art.anio = " + Integer.parseInt(anio1.getText()) + " AND";
                    }
                }
                if (isInteger(anio2.getText())) {
                    if (Integer.parseInt(anio2.getText()) > 0) {
                        query += " art.anio = " + Integer.parseInt(anio2.getText()) + " AND";
                    }

                }
            }
            if (TipoArticulo.getSelectedItem() != "Todos") {
                query += " VALUE(art) IS OF (ONLY articulo_interno) AND";
            }
            query = query.substring(0, query.length() - 3);
        }
        System.out.println(query);
        OracleResultSet resultado = BD.EjecutaConsulta(query);

        while (resultado.next()) {
            //System.out.println("entra"+resultado.getString(1));
            //as= casti del tipo(tipo)resultsetoracle.getORAData(Numparametro,tipo.getORADataFactory())
            //prar cursores utilizarlo igual con getcursor
            Articulo articulo = (Articulo) resultado.getORAData(1, Articulo.getORADataFactory());
            articulos.add(articulo);

            OracleResultSet cursorautor = (OracleResultSet) resultado.getCursor(2);
            ArrayList<Autor> auxautor = new ArrayList();
            while (cursorautor.next()) {
                Autor autor = (Autor) cursorautor.getORAData(1, Autor.getORADataFactory());
                auxautor.add(autor);
            }
            autores.add(auxautor);

            OracleResultSet cursorvirus = (OracleResultSet) resultado.getCursor(3);
            ArrayList<Virus> auxvirus = new ArrayList();
            while (cursorvirus.next()) {
                Virus vir = (Virus) cursorvirus.getORAData(1, Virus.getORADataFactory());
                auxvirus.add(vir);
            }
            virus.add(auxvirus);

            OracleResultSet cursorreferencia = (OracleResultSet) resultado.getCursor(4);
            ArrayList<Articulo> auxreferencia = new ArrayList();
            while (cursorreferencia.next()) {
                Articulo ref = (Articulo) cursorreferencia.getORAData(1, Articulo.getORADataFactory());
                auxreferencia.add(ref);
            }
            art_ref.add(auxreferencia);


            OracleResultSet cursorreferenciaDe = (OracleResultSet) resultado.getCursor(5);
            ArrayList<Articulo> auxreferenciaDe = new ArrayList();
            while (cursorreferenciaDe.next()) {
                Articulo ref = (Articulo) cursorreferenciaDe.getORAData(1, Articulo.getORADataFactory());
                auxreferenciaDe.add(ref);
            }
            ref_en_art.add(auxreferenciaDe);


        }

        BusquedaArticulos.removeAllItems();//=new javax.swing.JComboBox();
        // BusquedaArticulos.addItem("Articulos");
        for (int i = 0;
                i < articulos.size();
                i++) {
            ArticuloCombobox ArticuloCombo = new ArticuloCombobox(articulos.get(i), articulos.get(i).getTitulo(), autores.get(i), virus.get(i), art_ref.get(i), ref_en_art.get(i));
            BusquedaArticulos.addItem(ArticuloCombo);
        }
    }

    private DefaultTableModel ListaAutores(ArticuloCombobox articulo) throws SQLException {
        ArrayList<ArrayList<Object>> dataCollection = new ArrayList<>();
        ArrayList<Object> row;
        for (int s = 0; s < articulo.getAutores().size(); s++) {
            row = new ArrayList<>();
            row.add(articulo.getAutores().get(s).getNombre());
            row.add(articulo.getAutores().get(s).getNacionalidad());
            dataCollection.add(row);
        }

        Object[][] data = new Object[dataCollection.size()][2];
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);


        }

        // Se introducen los datos enpaco la tabla
        DefaultTableModel dtm = new DefaultTableModel(data, new String[]{"nombre", "Nacionalidad"}) {
            Class[] types = new Class[]{String.class, String.class
            };
            boolean[] canEdit = new boolean[]{false, false};

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);
        }
        return dtm;
    }

    private DefaultTableModel ListaVirus(ArticuloCombobox articulo) throws SQLException {
        ArrayList<ArrayList<Object>> dataCollection = new ArrayList<>();
        ArrayList<Object> row;


        for (int s = 0; s < articulo.getVirus().size(); s++) {
            row = new ArrayList<>();
            row.add(articulo.getVirus().get(s).getNombre());

            row.add(articulo.getVirus().get(s).getDescripcion());
            dataCollection.add(row);
        }

        Object[][] data = new Object[dataCollection.size()][2];
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);


        }

        // Se introducen los datos enpaco la tabla
        DefaultTableModel dtm = new DefaultTableModel(data, new String[]{"Nombre", "Descripcion"}) {
            Class[] types = new Class[]{String.class, String.class
            };
            boolean[] canEdit = new boolean[]{false, false};

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);
        }
        return dtm;
    }

    private DefaultTableModel ListaArtRef(ArticuloCombobox articulo) throws SQLException {
        ArrayList<ArrayList<Object>> dataCollection = new ArrayList<>();
        ArrayList<Object> row;


        for (int s = 0; s < articulo.getArtRef().size(); s++) {
            row = new ArrayList<>();
            row.add(articulo.getArtRef().get(s).getTitulo());

            row.add(articulo.getArtRef().get(s).getAnio());
            dataCollection.add(row);
        }

        Object[][] data = new Object[dataCollection.size()][2];
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);


        }

        // Se introducen los datos enpaco la tabla
        DefaultTableModel dtm = new DefaultTableModel(data, new String[]{"Nombre", "Descripcion"}) {
            Class[] types = new Class[]{String.class, String.class
            };
            boolean[] canEdit = new boolean[]{false, false};

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);
        }
        return dtm;
    }

    private DefaultTableModel ListaRefDeArt(ArticuloCombobox articulo) throws SQLException {
        ArrayList<ArrayList<Object>> dataCollection = new ArrayList<>();
        ArrayList<Object> row;


        for (int s = 0; s < articulo.getRefEnArt().size(); s++) {
            row = new ArrayList<>();
            row.add(articulo.getRefEnArt().get(s).getTitulo());

            row.add(articulo.getRefEnArt().get(s).getAnio());
            dataCollection.add(row);
        }

        Object[][] data = new Object[dataCollection.size()][2];
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);


        }

        // Se introducen los datos enpaco la tabla
        DefaultTableModel dtm = new DefaultTableModel(data, new String[]{"Nombre", "Descripcion"}) {
            Class[] types = new Class[]{String.class, String.class
            };
            boolean[] canEdit = new boolean[]{false, false};

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        for (int i = 0; i < dataCollection.size(); i++) {
            data[i] = dataCollection.get(i).toArray(new Object[2]);
        }
        return dtm;
    }

    public void SeleccionaUnArticulo() throws SQLException {
        if (BusquedaArticulos.getSelectedItem().toString() != "") {
            ArticuloCombobox articulo = (ArticuloCombobox) BusquedaArticulos.getSelectedItem();



            AutoresArticulo.setModel(ListaAutores(articulo));
            VirusArticulo.setModel(ListaVirus(articulo));
            ArtRef.setModel(ListaArtRef(articulo));
            RefArt.setModel(ListaRefDeArt(articulo));
            anioart.setText(articulo.getArticulo().getAnio().toString());
            volumen.setText(articulo.getArticulo().getVol().toString());
            numart.setText(articulo.getArticulo().getNum().toString());
            institutoArticulo.setText(articulo.getArticulo().getInstitutoRef().toString());
            String query = "select value(inst) from instituto_tab inst where inst.id_instituto= "
                    + articulo.getArticulo().getInstitutoRef();
            OracleResultSet resultado = BD.EjecutaConsulta(query);

            resultado.next();
            Instituto instituto = (Instituto) resultado.getORAData(1, Instituto.getORADataFactory());
            institutoArticulo.setText(instituto.getNombre());



        }
    }

    public static boolean isInteger(String cadena) {
        boolean esEntero = true;
        try {
            Integer.parseInt(cadena);
        } catch (Exception e) {
            esEntero = false;
        }
        return esEntero;
    }
}
